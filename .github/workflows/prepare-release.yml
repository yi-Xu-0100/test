name: 'prepare release'

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['release']
    branches: [main]
    types:
      - completed
  push:
    branches:
      - main

env:
  BASE_BRANCH: 'main'
  HEAD_BRANCH: 'prepare-release'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Prepare release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Setup nodejs
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bump version
        run: |
          git tag | grep -P 'v\d+\.\d+\.\d+-beta.\d+' -o | xargs git tag -d
          npx standard-version --skip.commit --skip.tag
          sed 's/^### \[/## [/' -i CHANGELOG.md
          npx prettier --write 'CHANGELOG.md'  --prose-wrap never --ignore-path './gitignore'

      - name: Get version from package.json
        uses: actions/github-script@v4.0.2
        id: version
        with:
          result-encoding: string
          script: |
            const version = require(`${process.env.GITHUB_WORKSPACE}/package.json`).version;
            core.setOutput('repo', context.repo.repo);
            core.setOutput('version', version);
            core.setOutput('title', 'chore(release): ðŸ”– release v' + version);

      - name: Create commit
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'chore(release): ðŸ”– release v${{steps.version.outputs.version}}'
          git branch -D '${{ env.HEAD_BRANCH }}' 2>&1 | sed 's/error/warning/'
          git checkout -b '${{ env.HEAD_BRANCH }}'
          git remote set-url origin 'https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git'
          git push -f -u origin '${{ env.HEAD_BRANCH }}'

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{steps.version.outputs.version}}
          path: ./CHANGELOG.md

      - name: Get Changelog
        uses: actions/github-script@v4.0.2
        id: changelog
        env:
          CHANGELOG: ${{ steps.changelog_reader.outputs.changes }}
        with:
          script: return process.env.CHANGELOG;

      - name: create-pull-request
        uses: actions/github-script@v4.0.2
        env:
          changelog: ${{ steps.changelog_reader.outputs.changes }}
        with:
          script: |
            const { changelog } = process.env;
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'prepare-release',
              base: 'main',
              title: 'test create',
              body: `${changelog}`
            });

      - name: Find pull request
        uses: juliangruber/find-pull-request-action@v1.5.0
        id: find-pull-request
        with:
          branch: ${{ env.HEAD_BRANCH }}

      - name: Update pull request
        env:
          NUMBER: ${{ steps.find-pull-request.outputs.number }}
        run: |
          curl \
            -X PATCH \
            -H 'authorization: token ${{secrets.GITHUB_TOKEN}}' \
            -H 'Accept: application/vnd.github.v3+json' \
            'https://api.github.com/repos/${{github.repository}}/pulls/${{ env.NUMBER }}' \
            -d '{"base":"${{ env.BASE_BRANCH }}","title":"${{steps.version.outputs.title}}","body":${{steps.CHANGELOG.outputs.result}}}'
